{"version":3,"sources":["views/banners/index.js"],"names":["pageNames","value","label","banner","id","page","image","DesktopBanner","useState","modal","setModal","modal2","setModal2","toggleModalDanger","toggleModalPrimary","img","setImg","uppy","Uppy","meta","type","restrictions","maxNumberOfFiles","autoProceed","use","thumbnailGenerator","on","file","preview","tag","className","md","sm","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","for","name","Ripple","color","onClick","e","preventDefault","responsive","map","index","src","width","height","alt","size","caret","right","href","isOpen","toggle","modalClassName"],"mappings":"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","file":"static/js/192.f9d3e0ed.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport Uppy from '@uppy/core'\r\nimport thumbnailGenerator from '@uppy/thumbnail-generator'\r\nimport { DragDrop } from '@uppy/react'\r\nimport '../../@core/scss/react/libs/file-uploader/file-uploader.scss'\r\nimport 'uppy/dist/uppy.css'\r\nimport { selectThemeColors } from '@utils'\r\nimport { MoreVertical, Edit, Trash} from 'react-feather'\r\nimport Select from 'react-select'\r\n\r\nconst pageNames = [\r\n    { value: 'ocean', label: 'About Us' },\r\n    { value: 'blue', label: 'Services' },\r\n    { value: 'purple', label: 'Contact Us' },\r\n    { value: 'red', label: 'Home' }\r\n  ]\r\n\r\nimport {  Card, Spinner, CustomInput, Label, FormGroup, CardHeader, Form, Row, Col, CardTitle, CardBody, Table,  Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Button } from 'reactstrap'\r\n\r\n  const banner = [\r\n    {  \r\n      id:1,\r\n      page : 'Home',\r\n      image : 'https://www.globalpartnership.org/sites/default/files/styles/standard_blog_banner/public/29710525041_ad39691f86_k.jpg?itok=iXLyBysd'\r\n    },\r\n    {  \r\n      id:2,\r\n      page : 'About Us',\r\n      image : 'https://www.globalpartnership.org/sites/default/files/styles/standard_blog_banner/public/29710525041_ad39691f86_k.jpg?itok=iXLyBysd'\r\n    },\r\n    {  \r\n        id:3,\r\n        page : 'Services',\r\n        image : 'https://www.globalpartnership.org/sites/default/files/styles/standard_blog_banner/public/29710525041_ad39691f86_k.jpg?itok=iXLyBysd'\r\n      }\r\n    \r\n]\r\n  const DesktopBanner = () => {\r\n    const [modal, setModal] = useState(null)\r\n    const [modal2, setModal2] = useState(null)\r\n\r\n    const toggleModalDanger = id => {\r\n      if (modal !== id) {\r\n        setModal(id)\r\n      } else {\r\n        setModal(null)\r\n      }\r\n    }\r\n    const toggleModalPrimary = id => {\r\n        if (modal2 !== id) {\r\n          setModal2(id)\r\n        } else {\r\n          setModal2(null)\r\n        }\r\n      }\r\n    \r\n    //file uploader\r\n    const [img, setImg] = useState(null)\r\n\r\n    const uppy = new Uppy({\r\n      meta: { type: 'avatar' },\r\n      restrictions: { maxNumberOfFiles: 1 },\r\n      autoProceed: true\r\n    })\r\n  \r\n    uppy.use(thumbnailGenerator)\r\n  \r\n    uppy.on('thumbnail:generated', (file, preview) => {\r\n      setImg(preview)\r\n    })\r\n    return (\r\n        <>\r\n        <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Add Page Banners </CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Form>\r\n            <Row>\r\n            <Col className='mb-1' md='6' sm='12'>\r\n                <Label>Page Name</Label>\r\n                <Select\r\n                theme={selectThemeColors}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                defaultValue={pageNames[0]}\r\n                options={pageNames}\r\n                isClearable={false}\r\n                />\r\n            </Col>\r\n               <Col md='6' sm='12'>\r\n                    <FormGroup>\r\n                    <Label for='exampleCustomFileBrowser'>Upload Page Banner</Label>\r\n                    <CustomInput type='file' id='exampleCustomFileBrowser' name='customFile' />\r\n                    </FormGroup>\r\n                </Col>\r\n               <Col sm='12' className=\"mt-1\">\r\n                <FormGroup className='d-flex mb-0'>\r\n                  <Button.Ripple className='mr-1' color='primary' type='submit' onClick={e => e.preventDefault()}>\r\n                    Submit\r\n                      {/* spinner */}\r\n                      {/* <Spinner color='light' /> */}\r\n                  </Button.Ripple>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n      <CardBody>\r\n      <CardTitle>All Banners</CardTitle>\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Page Names</th>\r\n              <th>Banners</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {\r\n          banner.map((value, index) => {\r\n              return (\r\n              <tr key={index}>\r\n              <td>\r\n                {value.page}\r\n              </td>\r\n      \r\n              <td> <img src={value.image}  width=\"200\" height=\"100\" alt=\"\"/> </td>\r\n                <td>\r\n                  <UncontrolledDropdown>\r\n                  <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\r\n                      <MoreVertical size={15} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                      <DropdownItem href='/'  onClick={(e) => { \r\n                        e.preventDefault()  \r\n                        toggleModalPrimary(value.id) \r\n                        }}>\r\n                      <Edit className='mr-50' size={15} />  <span className='align-middle'>Edit</span>\r\n                      </DropdownItem>\r\n\r\n                      <DropdownItem href='/' onClick={(e) => { \r\n                        e.preventDefault()  \r\n                        toggleModalDanger(value.id) \r\n                        }}>\r\n                      <Trash className='mr-50' size={15} /> <span className='align-middle'>Delete</span>\r\n                      </DropdownItem>\r\n                  </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <Modal\r\n                    isOpen={modal2 === value.id}\r\n                    toggle={() => toggleModalPrimary(value.id)}\r\n                    className='modal-dialog-centered'\r\n                    modalClassName=\"modal-primary\"\r\n                    key={value.id}>\r\n                    <ModalHeader toggle={() => toggleModalPrimary(value.id)}>Edit</ModalHeader>\r\n                    <ModalBody>\r\n                       <Form>\r\n                            <Row>\r\n                              <Col sm='12' className=\"mt-2\">\r\n                                {/* basic image upload */}\r\n                              \r\n                                <h6> Upload Banner </h6>\r\n                                  <DragDrop uppy={uppy} />\r\n                                  {img !== null ? <img className='rounded mt-2' src={img} alt='avatar' /> : null}\r\n                              </Col>\r\n                               \r\n                            </Row>\r\n                       </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                            \r\n                      <Button color=\"primary\" onClick={() => toggleModalPrimary(value.id)}>\r\n                        Submit\r\n                          {/* spinner */}\r\n                          {/* <Spinner color='light' /> */}\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  {/* delete modal */}\r\n                  <Modal\r\n                    isOpen={modal === value.id}\r\n                    toggle={() => toggleModalDanger(value.id)}\r\n                    className='modal-dialog-centered'\r\n                    modalClassName=\"modal-danger\"\r\n                    key={value.id}>\r\n                    <ModalHeader toggle={() => toggleModalDanger(value.id)}>Delete</ModalHeader>\r\n                    <ModalBody>\r\n                    Are you sure you want to delete this?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button color=\"danger\" onClick={() => toggleModalDanger(value.id)}>\r\n                        delete\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n              </td>\r\n              </tr>\r\n              )\r\n          })\r\n      }\r\n      \r\n    </tbody>\r\n  </Table>\r\n  </CardBody>\r\n  </Card>\r\n  </>\r\n    )\r\n  }\r\n  export default DesktopBanner\r\n  "],"sourceRoot":""}