{"version":3,"sources":["reusable/text-editors/TextEditors.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/pages/top-header/Form.js"],"names":["TextEditors","props","initialText","value","React","useState","text","setText","heading","modules","toolbar","onChange","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","TopHeader","xs","sm","id","className","htmlFor","placeholder","required","md","block","color"],"mappings":"8PAiDeA,UApCK,SAACC,GACrB,IAAMC,EAAcD,EAAME,MAqBxB,EAAwBC,IAAMC,SAASH,GAAvC,mBAAOI,EAAP,KAAaC,EAAb,KAEA,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACEN,EAAMO,UAER,cAAC,IAAD,UACE,cAAC,IAAD,CAAaL,MAAOG,EAAMG,QA1BhB,CACdC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,aAAc,cACf,CAAC,CAAE,OAAU,GAAK,CAAE,OAAU,IAC9B,CAAC,CAAE,KAAQ,WAAY,CAAE,KAAQ,WACjC,CAAC,CAAE,OAAU,OAAQ,CAAE,OAAU,UACjC,CAAC,CAAE,OAAU,MAAO,CAAE,OAAU,OAChC,CAAC,CAAE,UAAa,QAChB,CAAC,CAAE,KAAQ,CAAC,SAAS,EAAO,QAAS,UACrC,CAAC,CAAE,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAChC,CAAC,CAAE,MAAS,IAAM,CAAE,WAAc,KAClC,CAAC,CAAE,KAAQ,KACX,CAAC,CAAE,MAAS,KACZ,CAAC,WAY6CC,SAAUJ,W,mHCvC/C,SAASK,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,6FI2F/EC,UAzEG,WAChB,MAA8BnB,mBAAS,IAAvC,6BAYE,OACE,mCAEF,eAAC,KAAD,WAEI,cAAC,IAAD,CAAMoB,GAAG,KAAKC,GAAG,KAAjB,SACI,eAAC,IAAD,WACA,eAAC,IAAD,wBAEI,6CAEJ,eAAC,IAAD,WACQ,cAAC,KAAD,UACI,cAAC,IAAD,CAAMD,GAAG,KAAT,SACI,eAAC,IAAD,WAEA,cAAC,KAAD,2BAEA,cAAC,IAAD,CACAE,GAAG,sBACCC,UAAU,oCAOtB,eAAC,KAAD,WACA,cAAC,IAAD,CAAMH,GAAG,KAAT,SACI,eAAC,IAAD,WACA,cAAC,KAAD,CAAQI,QAAQ,WAAhB,yBACA,cAAC,IAAD,CAAQF,GAAG,WAAWG,YAAY,WAAWC,UAAQ,SAGzD,cAAC,IAAD,CAAMN,GAAG,KAAT,SACI,eAAC,IAAD,WACA,cAAC,KAAD,CAAQI,QAAQ,WAAhB,2BACA,cAAC,IAAD,CAAQF,GAAG,WAAWG,YAAY,MAAMC,UAAQ,oBAQjE,cAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,KAAjB,SACE,cAAC,UAAD,CACClB,QAAQ,kBACRL,MAAM,oEAGT,cAAC,IAAD,CAAMsB,GAAG,IAAIO,GAAG,IAAIJ,UAAU,gBAA9B,SACI,cAAC,IAAD,CAASK,OAAK,EAACC,MAAM,UAArB","file":"static/js/26.cb6184dd.chunk.js","sourcesContent":["import React from 'react'\nimport ReactQuill from 'react-quill'\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody\n} from '@coreui/react'\n\n\nimport './TextEditors.scss'\n\n\n\nconst TextEditors = (props) => {\nconst initialText = props.value\n\n\n  const modules = {\n    toolbar: [\n      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n      ['blockquote', 'code-block'],\n      [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n      [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n      [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\n      [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n      [{ 'direction': 'rtl' }],                         // text direction\n      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n      [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n      [{ 'font': [] }],\n      [{ 'align': [] }],\n      ['clean']                                         // remove formatting button\n    ]\n  }\n\n  const [text, setText] = React.useState(initialText)\n\n  return (\n    <CCard >\n      <CCardHeader>\n       {props.heading}\n      </CCardHeader>\n      <CCardBody >\n        <ReactQuill  value={text} modules={modules} onChange={setText}/>\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default TextEditors\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React , {useState}from 'react'\r\nimport  TextEditor from '../../../reusable/text-editors/TextEditors'\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CFormGroup,\r\n  CInput,\r\n  CInputFile,\r\n  CLabel,\r\n  CRow,\r\n} from '@coreui/react'\r\n\r\n\r\nconst headerData = [\r\n  {id: 0, Image: 'baby icon', Heading: 'Looking for a babysitting job?', Link: 'none' , action: ''}\r\n]\r\n\r\nconst fields = ['Image','Heading', 'Link', 'action' ]\r\n\r\nconst TopHeader = () => {\r\n  const [details, setDetails] = useState([])\r\n  const toggleDetails = (index) => {\r\n    const position = details.indexOf(index)\r\n    let newDetails = details.slice()\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1)\r\n    } else {\r\n      newDetails = [...details, index]\r\n    } \r\n    setDetails(newDetails)\r\n  }\r\n  \r\n    return (\r\n      <>\r\n        \r\n    <CRow>\r\n       \r\n        <CCol xs=\"12\" sm=\"12\">\r\n            <CCard>\r\n            <CCardHeader>\r\n                Top Header\r\n                <small> Form</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                    <CRow>\r\n                        <CCol xs=\"12\">\r\n                            <CFormGroup >\r\n                            \r\n                            <CLabel>Select Image</CLabel>\r\n                \r\n                            <CInputFile \r\n                            id=\"file-multiple-input\" \r\n                                className=\"border py-1 rounded px-1\"                     \r\n                            />\r\n                        \r\n                            </CFormGroup>\r\n                        \r\n                            </CCol>\r\n                    </CRow>\r\n                    <CRow>\r\n                    <CCol xs=\"12\">\r\n                        <CFormGroup>\r\n                        <CLabel htmlFor=\"btn-name\">Button Name</CLabel>\r\n                        <CInput id=\"btn-name\" placeholder=\"Click Me\" required />\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                    <CCol xs=\"12\">\r\n                        <CFormGroup>\r\n                        <CLabel htmlFor=\"btn-link\">Button's Link</CLabel>\r\n                        <CInput id=\"btn-link\" placeholder=\"Url\" required />\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                    </CRow>\r\n                \r\n                </CCardBody>\r\n            </CCard>\r\n        </CCol>\r\n       <CCol xs=\"12\" sm=\"12\">\r\n         <TextEditor\r\n          heading=\"Top Header Text\"\r\n          value=\"<br><br><br><h1> looking for a baby sitter? </h1><br><br><br>\"\r\n         />\r\n       </CCol>\r\n       <CCol xs='6' md=\"3\" className=\"mb-3  ml-auto\">\r\n           <CButton block color=\"primary\" >Submit</CButton>\r\n        </CCol>\r\n    </CRow>\r\n\r\n          \r\n        </>\r\n    )\r\n}\r\nexport default TopHeader;"],"sourceRoot":""}