{"version":3,"sources":["views/tables/advanced-tables/DemoTable.js","views/tables/advanced-tables/SelectTable.js","views/tables/advanced-tables/BackendTable.js","views/tables/advanced-tables/DownloadTable.js","views/tables/advanced-tables/AdvancedTables.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","views/users/UsersData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["DemoTable","useState","details","setDetails","toggleDetails","index","position","indexOf","newDetails","slice","splice","getBadge","status","items","usersData","fields","key","_style","width","label","filter","columnFilter","tableFilter","cleaner","itemsPerPageSelect","itemsPerPage","hover","sorter","scopedSlots","item","color","className","variant","shape","size","onClick","id","includes","show","username","registered","SelectTable","selected","setSelected","data","map","_selected","_classes","JSON","stringify","pagination","select","custom","checked","onChange","e","target","itemId","check","htmlFor","BackendTable","src","style","height","border","borderRadius","overflow","title","allow","sandbox","currentItems","setCurrentItems","csvContent","Object","values","join","csvCode","encodeURIComponent","href","download","onFilteredItemsChange","AdvancedTables","sm","name","DownloadTable","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","constructor","from","test","_arrayLikeToArray","len","arr2","role","action","_toConsumableArray","arrayLikeToArray","iter"],"mappings":"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","file":"static/js/15.975376cd.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CCardBody,\n  CBadge,\n  CButton,\n  CCollapse,\n  CDataTable\n} from '@coreui/react'\nimport usersData from '../../users/UsersData.js'\n\nconst DemoTable = () => {\n  const [details, setDetails] = useState([])\n  // const [items, setItems] = useState(usersData)\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    } \n    setDetails(newDetails)\n  }\n\n\n  const fields = [\n    { key: 'name', _style: { width: '40%'} },\n    'registered',\n    { key: 'role', _style: { width: '20%'} },\n    { key: 'status', _style: { width: '20%'} },\n    {\n      key: 'show_details',\n      label: '',\n      _style: { width: '1%' },\n      filter: false\n    }\n  ]\n\n  const getBadge = (status)=>{\n    switch (status) {\n      case 'Active': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Pending': return 'warning'\n      case 'Banned': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  return (\n    <CCardBody>\n      <CDataTable\n        items={usersData}\n        fields={fields}\n        columnFilter\n        tableFilter\n        cleaner\n        itemsPerPageSelect\n        itemsPerPage={5}\n        hover\n        sorter\n        scopedSlots = {{\n          'status':\n            (item)=>(\n              <td>\n                <CBadge color={getBadge(item.status)}>\n                  {item.status}\n                </CBadge>\n              </td>\n            ),\n          'show_details':\n            item => {\n              return (\n                <td className=\"py-2\">\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    shape=\"square\"\n                    size=\"sm\"\n                    onClick={() => { toggleDetails(item.id) }}\n                  >\n                    { details.includes(item.id) ? 'Hide' : 'Show' }\n                  </CButton>\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    shape=\"square\"\n                    size=\"sm\"\n                    onClick={() => { toggleDetails(item.id) }}\n                  >\n                    { details.includes(item.id) ? 'Hide' : 'Show' }\n                  </CButton>\n                </td>\n              )\n            },\n          'details':\n              item => {\n                return (\n                <CCollapse show={details.includes(item.id)}>\n                  <CCardBody>\n                    <h4>\n                      {item.username}\n                    </h4>\n                    <p className=\"text-muted\">User since: {item.registered}</p>\n                    <CButton size=\"sm\" color=\"info\">\n                      User Settings\n                    </CButton>\n                    <CButton size=\"sm\" color=\"danger\" className=\"ml-1\">\n                      Delete\n                    </CButton>\n                  </CCardBody>\n                </CCollapse>\n              )\n            }\n        }}\n      />\n    </CCardBody>\n  )\n}\n\nexport default DemoTable\n","import React, { useState } from 'react'\nimport {\n  CDataTable,\n  CCardBody,\n  CInputCheckbox,\n  CFormGroup,\n  CLabel\n} from '@coreui/react'\nimport data from '../../users/UsersData.js'\n\nconst SelectTable = () => {\n  const [selected, setSelected] = useState([2, 3])\n  const usersData = data.map((item, id) => {\n    const _selected = selected.includes(id)\n    return {\n      ...item,\n      id,\n      _selected,\n      _classes: [item._classes, _selected && \"table-selected\"]\n    }\n  })\n\n  const check = (e, id) => {\n    if (e.target.checked) {\n      setSelected([...selected, id]);\n    } else {\n      setSelected(selected.filter(itemId => itemId !== id));\n    }\n  }\n\n\n  return (\n    <CCardBody>\n      Selected: {JSON.stringify(selected)}\n      <CDataTable\n        items={usersData}\n        fields={[\n          { key: 'select', label: '', filter: false },\n          'name',\n          'registered',\n          'role',\n          'status'\n        ]}\n        itemsPerPage={5}\n        columnFilter\n        sorter\n        hover\n        pagination\n        scopedSlots={{\n          select: item => {\n            return (\n              <td>\n                <CFormGroup variant=\"custom-checkbox\">\n                  <CInputCheckbox\n                    custom\n                    id={`checkbox${item.id}`}\n                    checked={item._selected}\n                    onChange={e => check(e, item.id)}\n                  />\n                  <CLabel\n                    variant=\"custom-checkbox\"\n                    htmlFor={`checkbox${item.id}`}\n                  />\n                </CFormGroup>\n              </td>\n            )\n          }\n        }}\n        tableFilter\n        cleaner\n      />\n    </CCardBody>\n  )\n}\n\nexport default SelectTable\n","import React from 'react'\nimport { CCardBody } from '@coreui/react'\n\nconst BackendTable = () => {\n  return (\n    <CCardBody>\n      This example simulates data passed lazily from backend.<br></br> \n     \n      <iframe src=\"https://codesandbox.io/embed/react-cdatatable-backend-integration-i6f69?fontsize=14&hidenavigation=1&theme=dark&view=preview\"\n        style={{ width:'100%', height:'500px', border:'0', borderRadius: '4px', overflow:'hidden' }}\n        title=\"React CDataTable backend integration\"\n        allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n        sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n      ></iframe>\n    </CCardBody>\n\n  )\n}\n\nexport default BackendTable\n","import React, { useState } from 'react'\nimport {\n  CCardBody,\n  CButton,\n  CDataTable\n} from '@coreui/react'\nimport usersData from '../../users/UsersData.js'\n\nconst DemoTable = () => {\n  const [currentItems, setCurrentItems] = useState(usersData)\n\n  const csvContent = currentItems.map(item => Object.values(item).join(',')).join('\\n')\n    \n  const csvCode = 'data:text/csv;charset=utf-8,SEP=,%0A' + encodeURIComponent(csvContent)\n\n  return (\n    <CCardBody>\n      <CButton\n        color=\"primary\"\n        className=\"mb-2\"\n        href={csvCode} \n        download=\"coreui-table-data.csv\"\n        target=\"_blank\"\n      >\n        Download current items (.csv)\n      </CButton>\n      <CDataTable\n        items={usersData}\n        columnFilter\n        itemsPerPage={5}\n        hover\n        sorter\n        onFilteredItemsChange={setCurrentItems}\n      />    \n    </CCardBody>\n  )\n}\n\nexport default DemoTable\n","import React from 'react'\nimport {\n  CCard,\n  CCardHeader,\n  CCol,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport DemoTable from './DemoTable'\nimport SelectTable from './SelectTable'\nimport BackendTable from './BackendTable'\nimport DownloadTable from './DownloadTable'\n \n\nconst AdvancedTables = () => {\n  return (\n    <CRow>\n      <CCol sm=\"12\">\n        <CCard>\n          <CCardHeader>\n            <CIcon name=\"cil-grid\"/> Advanced CDataTable application\n            \n          </CCardHeader>\n          <DemoTable/>\n        </CCard>\n\n        <CCard>\n          <CCardHeader>\n            Backend integration example\n          </CCardHeader>\n          <BackendTable/>\n        </CCard>\n\n        <CCard>\n          <CCardHeader>\n            Table with selectable rows\n          </CCardHeader>\n          <SelectTable/>\n        </CCard>\n\n        <CCard>\n          <CCardHeader>\n            Current table items download to xlsx/csv table\n          </CCardHeader>\n          <DownloadTable/>\n        </CCard>\n\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default AdvancedTables\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","const usersData = [\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', action: 'edit'},\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', action: 'edit'},\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', action: 'edit'},\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', action: 'edit'},\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', action: 'edit'},\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', action: 'edit'},\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', action: 'edit'},\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', action: 'edit'},\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', action: 'edit'},\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', action: 'edit'},\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', action: 'edit'},\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', action: 'edit'},\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', action: 'edit'},\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', action: 'edit'},\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', action: 'edit'},\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', action: 'edit'},\n\n]\n\nexport default usersData\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}