{"version":3,"sources":["views/pages/banner/List.js","reusable/text-editors/TextEditors.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["bannerData","Heading","CertifiedUserData","Image","About","Description","fieldsBanner","fieldsBannerBottom","BannerList","useState","xs","lg","items","fields","scopedSlots","item","className","to","size","color","Banner","TextEditors","props","initialText","value","React","text","setText","heading","modules","toolbar","onChange","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"+PAuBMA,EAAa,KACfC,QAAS,8BADM,wBACiC,8CADjC,iCACiG,QADjG,uBACkH,IADlH,IAGbC,EAAoB,CACxB,CAACC,MAAO,OAASF,QAAS,sBAAuBG,MAAO,sCAAuCC,YAAa,gFAGxGC,EAAe,CAAC,UAAU,UAAW,mBAAoB,UACzDC,EAAqB,CAAC,QAAU,UAAU,QAAS,eAoE1CC,UAlEI,WACjB,MAA8BC,mBAAS,IAAvC,6BAYE,OACE,mCAGI,cAAC,KAAD,UACF,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SACE,cAAC,IAAD,UAEE,eAAC,IAAD,WAEC,cAAC,IAAD,CACCC,MAAOZ,EACPa,OAAQP,EAERQ,YAAe,CAEf,OACE,SAAAC,GACM,OACE,qBAAIC,UAAU,OAAd,UACI,cAAC,IAAD,CAAMC,GAAG,eAAT,SACF,cAAC,IAAD,CAASC,KAAK,KAAKC,MAAM,OAAzB,mBAIF,cAAC,IAAD,CAAMF,GAAG,eAAT,SACE,cAAC,IAAD,CAASC,KAAK,KAAKC,MAAM,UAAUH,UAAU,OAA7C,oBAIA,cAAC,IAAD,CAASE,KAAK,KAAKC,MAAM,SAASH,UAAU,OAA5C,2BASf,cAAC,IAAD,CACGJ,MAAOV,EACPkB,OAAQb,iB,iHCtCPc,UApCK,SAACC,GACrB,IAAMC,EAAcD,EAAME,MAqBxB,EAAwBC,IAAMhB,SAASc,GAAvC,mBAAOG,EAAP,KAAaC,EAAb,KAEA,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACEL,EAAMM,UAER,cAAC,IAAD,UACE,cAAC,IAAD,CAAaJ,MAAOE,EAAMG,QA1BhB,CACdC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,aAAc,cACf,CAAC,CAAE,OAAU,GAAK,CAAE,OAAU,IAC9B,CAAC,CAAE,KAAQ,WAAY,CAAE,KAAQ,WACjC,CAAC,CAAE,OAAU,OAAQ,CAAE,OAAU,UACjC,CAAC,CAAE,OAAU,MAAO,CAAE,OAAU,OAChC,CAAC,CAAE,UAAa,QAChB,CAAC,CAAE,KAAQ,CAAC,SAAS,EAAO,QAAS,UACrC,CAAC,CAAE,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAChC,CAAC,CAAE,MAAS,IAAM,CAAE,WAAc,KAClC,CAAC,CAAE,KAAQ,KACX,CAAC,CAAE,MAAS,KACZ,CAAC,WAY6CC,SAAUJ,W,mHCvC/C,SAASK,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE","file":"static/js/18.4be169de.chunk.js","sourcesContent":["import React , {useState}from 'react'\r\nimport  TextEditor from '../../../reusable/text-editors/TextEditors'\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n} from '@coreui/react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst getBadge = action => {\r\n  switch (action) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst bannerData = [\r\n  { Heading: 'HERE IN YOUR NEIGHBOREHOOD', Heading: 'Connecteing families Careing for the child', Background_Image: 'none' , action: ''}\r\n]\r\nconst CertifiedUserData = [\r\n  {Image: \"none\" , Heading: 'Cerified Babysitter', About: 'Jone | 30 years old | 10+ exp | 30$', Description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Veniam dolorem id'}\r\n]\r\n\r\nconst fieldsBanner = ['Heading','Heading', 'Background_Image', 'action' ]\r\nconst fieldsBannerBottom = ['Image' , 'Heading','About', 'Description',  ]\r\n\r\nconst BannerList = () => {\r\n  const [details, setDetails] = useState([])\r\n  const toggleDetails = (index) => {\r\n    const position = details.indexOf(index)\r\n    let newDetails = details.slice()\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1)\r\n    } else {\r\n      newDetails = [...details, index]\r\n    } \r\n    setDetails(newDetails)\r\n  }\r\n  \r\n    return (\r\n      <>\r\n       \r\n          \r\n          <CRow>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n          \r\n            <CCardBody>\r\n           \r\n             <CDataTable\r\n              items={bannerData}\r\n              fields={fieldsBanner}\r\n              \r\n              scopedSlots = {{\r\n              \r\n              'action':\r\n                item => {\r\n                      return (\r\n                        <td className=\"py-2\">\r\n                            <Link to=\"/banner/form\"> \r\n                          <CButton size=\"sm\" color=\"info\" >\r\n                          Add\r\n                          </CButton>\r\n                        </Link>\r\n                        <Link to=\"/banner/form\"> \r\n                          <CButton size=\"sm\" color=\"warning\" className=\"ml-2\" >\r\n                          Edit\r\n                          </CButton>\r\n                        </Link>\r\n                          <CButton size=\"sm\" color=\"danger\" className=\"ml-2\">\r\n                          Delete\r\n                        </CButton>\r\n                    \r\n                    </td>\r\n                  )\r\n                }\r\n            }}\r\n          />\r\n           <CDataTable\r\n              items={CertifiedUserData}\r\n              Banner={fieldsBannerBottom}\r\n      \r\n            \r\n          />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        </CRow>\r\n          \r\n        </>\r\n    )\r\n}\r\nexport default BannerList;","import React from 'react'\nimport ReactQuill from 'react-quill'\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody\n} from '@coreui/react'\n\n\nimport './TextEditors.scss'\n\n\n\nconst TextEditors = (props) => {\nconst initialText = props.value\n\n\n  const modules = {\n    toolbar: [\n      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n      ['blockquote', 'code-block'],\n      [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n      [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n      [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\n      [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n      [{ 'direction': 'rtl' }],                         // text direction\n      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n      [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n      [{ 'font': [] }],\n      [{ 'align': [] }],\n      ['clean']                                         // remove formatting button\n    ]\n  }\n\n  const [text, setText] = React.useState(initialText)\n\n  return (\n    <CCard >\n      <CCardHeader>\n       {props.heading}\n      </CCardHeader>\n      <CCardBody >\n        <ReactQuill  value={text} modules={modules} onChange={setText}/>\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default TextEditors\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}